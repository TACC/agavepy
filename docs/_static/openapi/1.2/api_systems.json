{
    "apis": [
        {
            "api_declaration": {
                "apiVersion": "2.2.14",
                "apis": [
                    {
                        "description": "Query for the list of available public systems",
                        "has_websocket": false,
                        "operations": [
                            {
                                "is_websocket": false,
                                "method": "GET",
                                "nickname": "list",
                                "notes": "All systems you own, public systems, and systems that have been shared with you.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The type of system to return",
                                        "enum": [
                                            "STORAGE",
                                            "EXECUTION"
                                        ],
                                        "name": "type",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "Should only default systems be returned",
                                        "name": "default",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "boolean"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "Should only publicly available systems be returned",
                                        "name": "public",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "boolean"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 250,
                                        "description": "The max number of results.",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "limit",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 0,
                                        "description": "The number of records to when returning the results. When paginating results, the page number = ceil(offset/limit)",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "offset",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    }
                                ],
                                "summary": "Show all systems available to the user.",
                                "type": "MultipleSystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "POST",
                                "nickname": "add",
                                "notes": "",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"id\": \"demo.execute.example.com\",\n\t\"name\": \"Demo SGE + GSISSH demo vm\",\n\t\"status\": \"UP\",\n\t\"type\": \"EXECUTION\",\n\t\"description\": \"My example system using gsissh and gridftp to submit jobs used for testing.\",\n\t\"site\": \"example.com\",\n\t\"executionType\": \"HPC\",\n\t\"queues\": [\n\t\t{\n\t\t\t\"name\": \"debug\",\n\t\t\t\"maxJobs\": 100,\n\t\t\t\"maxUserJobs\": 10,\n\t\t\t\"maxNodes\": 128,\n\t\t\t\"maxMemoryPerNode\": \"2GB\",\n\t\t\t\"maxProcessorsPerNode\": 128,\n\t\t\t\"maxRequestedTime\": \"24:00:00\",\n\t\t\t\"customDirectives\": \"\",\n\t\t\t\"default\": true\n\t\t}\n\t],\n\t\"login\": {\n\t\t\"host\": \"gsissh.example.com\",\n\t\t\"port\": 2222,\n\t\t\"protocol\": \"GSISSH\",\n\t\t\"scratchDir\": \"/scratch\",\n\t\t\"workDir\": \"/work\",\n\t\t\"auth\": {\n\t\t\t\"username\": \"demo\",\n\t\t\t\"password\": \"demo\",\n\t\t\t\"credential\": \"\",\n\t\t\t\"type\": \"X509\",\n\t\t\t\"server\": {\n\t\t\t\t\"id\": \"myproxy.teragrid.org\",\n\t\t\t\t\"name\": \"XSEDE MyProxy Server\",\n\t\t\t\t\"site\": \"ncsa.uiuc.edu\",\n\t\t\t\t\"endpoint\": \"myproxy.teragrid.org\",\n\t\t\t\t\"port\": 7512,\n\t\t\t\t\"protocol\": \"MYPROXY\"\n\t\t\t}\n\t\t}\n\t},\n\t\"storage\": {\n\t\t\"host\": \"gridftp.example.com\",\n\t\t\"port\": 2811,\n\t\t\"protocol\": \"GRIDFTP\",\n\t\t\"rootDir\": \"/home/demo\",\n\t\t\"homeDir\": \"/\",\n\t\t\"auth\": {\n\t\t\t\"username\": \"demo\",\n\t\t\t\"password\": \"demo\",\n\t\t\t\"credential\": \"\",\n\t\t\t\"type\": \"X509\",\n\t\t\t\"server\": {\n\t\t\t\t\"id\": \"myproxy.teragrid.org\",\n\t\t\t\t\"name\": \"XSEDE MyProxy Server\",\n\t\t\t\t\"site\": \"ncsa.uiuc.edu\",\n\t\t\t\t\"endpoint\": \"myproxy.teragrid.org\",\n\t\t\t\t\"port\": 7512,\n\t\t\t\t\"protocol\": \"MYPROXY\"\n\t\t\t}\n\t\t}\n\t},\n\t\"maxSystemJobs\": 100,\n\t\"maxSystemJobsPerUser\": 10,\n\t\"scheduler\": \"SGE\",\n\t\"environment\": \"\",\n\t\"startupScript\": \"./bashrc\"\n}",
                                        "description": "The description of the system to add or update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "SystemRequest"
                                    }
                                ],
                                "summary": "Add or update a system.",
                                "type": "SingleSystemResponse"
                            }
                        ],
                        "path": "/systems/v2/"
                    },
                    {
                        "description": "Find information about an individual system.",
                        "has_websocket": false,
                        "operations": [
                            {
                                "is_websocket": false,
                                "method": "GET",
                                "nickname": "get",
                                "notes": "",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The unique id of the system",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ],
                                "summary": "Find information about an individual system.",
                                "type": "SingleSystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "POST",
                                "nickname": "update",
                                "notes": "",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The unique id of the system",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"id\": \"demo.execute.example.com\",\n\t\"name\": \"Demo SGE + GSISSH demo vm\",\n\t\"status\": \"UP\",\n\t\"type\": \"EXECUTION\",\n\t\"description\": \"My example system using gsissh and gridftp to submit jobs used for testing.\",\n\t\"site\": \"example.com\",\n\t\"executionType\": \"HPC\",\n\t\"queues\": [\n\t\t{\n\t\t\t\"name\": \"debug\",\n\t\t\t\"maxJobs\": 100,\n\t\t\t\"maxUserJobs\": 10,\n\t\t\t\"maxNodes\": 128,\n\t\t\t\"maxMemoryPerNode\": \"2GB\",\n\t\t\t\"maxProcessorsPerNode\": 128,\n\t\t\t\"maxRequestedTime\": \"24:00:00\",\n\t\t\t\"customDirectives\": \"\",\n\t\t\t\"default\": true\n\t\t}\n\t],\n\t\"login\": {\n\t\t\"host\": \"gsissh.example.com\",\n\t\t\"port\": 2222,\n\t\t\"protocol\": \"GSISSH\",\n\t\t\"scratchDir\": \"/scratch\",\n\t\t\"workDir\": \"/work\",\n\t\t\"auth\": {\n\t\t\t\"username\": \"demo\",\n\t\t\t\"password\": \"demo\",\n\t\t\t\"credential\": \"\",\n\t\t\t\"type\": \"X509\",\n\t\t\t\"server\": {\n\t\t\t\t\"id\": \"myproxy.teragrid.org\",\n\t\t\t\t\"name\": \"XSEDE MyProxy Server\",\n\t\t\t\t\"site\": \"ncsa.uiuc.edu\",\n\t\t\t\t\"endpoint\": \"myproxy.teragrid.org\",\n\t\t\t\t\"port\": 7512,\n\t\t\t\t\"protocol\": \"MYPROXY\"\n\t\t\t}\n\t\t}\n\t},\n\t\"storage\": {\n\t\t\"host\": \"gridftp.example.com\",\n\t\t\"port\": 2811,\n\t\t\"protocol\": \"GRIDFTP\",\n\t\t\"rootDir\": \"/home/demo\",\n\t\t\"homeDir\": \"/\",\n\t\t\"auth\": {\n\t\t\t\"username\": \"demo\",\n\t\t\t\"password\": \"demo\",\n\t\t\t\"credential\": \"\",\n\t\t\t\"type\": \"X509\",\n\t\t\t\"server\": {\n\t\t\t\t\"id\": \"myproxy.teragrid.org\",\n\t\t\t\t\"name\": \"XSEDE MyProxy Server\",\n\t\t\t\t\"site\": \"ncsa.uiuc.edu\",\n\t\t\t\t\"endpoint\": \"myproxy.teragrid.org\",\n\t\t\t\t\"port\": 7512,\n\t\t\t\t\"protocol\": \"MYPROXY\"\n\t\t\t}\n\t\t}\n\t},\n\t\"maxSystemJobs\": 100,\n\t\"maxSystemJobsPerUser\": 10,\n\t\"scheduler\": \"SGE\",\n\t\"environment\": \"\",\n\t\"startupScript\": \"./bashrc\"\n}",
                                        "description": "The description of the system to update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "SystemRequest"
                                    }
                                ],
                                "summary": "Find information about an individual system.",
                                "type": "SingleSystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "PUT",
                                "nickname": "manage",
                                "notes": "PUBLISH moves the system from private to public. Only API administrators can peform this action. DEFAULT makes the given system your default system of that type. When no system is explicitly specified in URI, your default storage system will be used. CLONE creates a private copy of the named system. Authentication information will not be cloned, so you must update the system with your own credentials.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The unique id of the system",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"action\": \"clone\",\n\t\"name\": \"storage-copy.example.com\",\n}",
                                        "description": "The description of the system to update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "SystemOperationRequest"
                                    }
                                ],
                                "summary": "Perform a management action on the system.",
                                "type": "EmptySystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "DELETE",
                                "nickname": "delete",
                                "notes": "Disables the system and all applications registered to it. Once deleted, the system cannot be recovered and the systemId cannot be reused.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The unique id of the system",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ],
                                "summary": "Delete a system.",
                                "type": "EmptySystemResponse"
                            }
                        ],
                        "path": "/systems/v2/{systemId}"
                    },
                    {
                        "description": "List all user roles on this system",
                        "has_websocket": false,
                        "operations": [
                            {
                                "is_websocket": false,
                                "method": "GET",
                                "nickname": "listRoles",
                                "notes": "Users must have ADMIN role or greater on a system to view its roles.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 250,
                                        "description": "The max number of results.",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "limit",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 0,
                                        "description": "The number of records to when returning the results. When paginating results, the page number = ceil(offset/limit)",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "offset",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    }
                                ],
                                "summary": "Get a list of all users and their roles on this system.",
                                "type": "MultipleSystemRoleResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "POST",
                                "nickname": "updateRole",
                                "notes": "Setting a user's role to NONE or an empty string is the same as deleting that user's permission. Once all user's roles have been removed from a system, any applications that were registered by the user on the system will be disabled. Users must have ADMIN role or greater on a system to manage its roles.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"username\": \"rclemens\",\n\t\"role\": \"USER\",\n}",
                                        "description": "The role to update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "SystemRole"
                                    }
                                ],
                                "summary": "Add or update a user's role on a system.",
                                "type": "EmptySystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "DELETE",
                                "nickname": "deleteRoles",
                                "notes": "This will reset the permissions such that only the user who registered the system will be able to view it. System owners cannot remove their own permissions. All apps registered by the deleted users on this system will be disabled. Users must have ADMIN role or greater on a system to delete its roles.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ],
                                "summary": "Deletes all roles on a system.",
                                "type": "EmptySystemResponse"
                            }
                        ],
                        "path": "/systems/v2/{systemId}/roles"
                    },
                    {
                        "description": "List all user roles on this system",
                        "has_websocket": false,
                        "operations": [
                            {
                                "is_websocket": false,
                                "method": "GET",
                                "nickname": "getRoleForUser",
                                "notes": "Users must have ADMIN role or greater on a system to view its roles.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of the user about whose role you are inquiring.",
                                        "name": "username",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 250,
                                        "description": "The max number of results.",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "limit",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 0,
                                        "description": "The number of records to when returning the results. When paginating results, the page number = ceil(offset/limit)",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "offset",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    }
                                ],
                                "summary": "Get a specific user's roles on this system.",
                                "type": "SingleSystemRoleResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "POST",
                                "nickname": "updateRoleForUser",
                                "notes": "Setting a user's role to NONE or an empty string is the same as deleting that user's permission. Once all user's roles have been removed from a system, any applications that were registered by the user on the system will be disabled. Users must have ADMIN role or greater on a system to edit its roles.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of the api user associated with the role",
                                        "name": "username",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"username\": \"rclemens\",\n\t\"role\": \"USER\",\n}",
                                        "description": "The role to update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "SystemRole"
                                    }
                                ],
                                "summary": "Add or update a user's role on a system.",
                                "type": "EmptySystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "DELETE",
                                "nickname": "deleteRoleForUser",
                                "notes": "This will reset the permissions such that only the user who registered the system will be able to view it. System owners cannot remove their own permissions. All apps registered by the deleted users on this system will be disabled. Users must have ADMIN role or greater on a system to delete its roles.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of the api user associated with the role",
                                        "name": "username",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ],
                                "summary": "Deletes all roles on a system.",
                                "type": "EmptySystemResponse"
                            }
                        ],
                        "path": "/systems/v2/{systemId}/roles/{username}"
                    },
                    {
                        "description": "List of internal user credentials on this system",
                        "has_websocket": false,
                        "operations": [
                            {
                                "is_websocket": false,
                                "method": "GET",
                                "nickname": "listCredentials",
                                "notes": "Users must have ADMIN role or greater on a system to view its credentials. No sensitive information will be returned. This is strictly to keep track of which internal users have their own credentials.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 250,
                                        "description": "The max number of results.",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "limit",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 0,
                                        "description": "The number of records to when returning the results. When paginating results, the page number = ceil(offset/limit)",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "offset",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    }
                                ],
                                "summary": "Get a list of all internal users and their credentials on this system.",
                                "type": "SystemCredentialsResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "POST",
                                "nickname": "updateCredentials",
                                "notes": "Credentials will be valided when submitted. If the credentials are not valid, an error will be returned. Users must have ADMIN role or greater on a system to manage its credentials. No sensitive information will be returned. This is strictly to keep track of which internal users have their own credentials.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"internalUsername\": null,\n\t\"username\": \"nryan\",\n\t\"password\": \"<password>\",\n\t\"credential\": null,\n\t\"type\": \"X509\",\n\t\"server\": {\n\t\t\"endpoint\": \"myproxy.teragrid.org\",\n\t\t\"port\": 7512,\n\t\t\"protocol\": \"MYPROXY\"\n\t},\n\t\"default\": true\n}",
                                        "description": "The description of the internal user credential to add or update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "UserCredential"
                                    }
                                ],
                                "summary": "Add or update a user's credential on a system. This applies both to data and, if applicable, login credenitals.",
                                "type": "EmptySystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "DELETE",
                                "nickname": "deleteCredentials",
                                "notes": "This will delete all credentials except the default system credential. The internal users will remain unchanged and their individual credentials will fall back to the default system credential on all future interactions. Users must have ADMIN role or greater on a system to delete its roles. No sensitive information will be returned.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ],
                                "summary": "Deletes all credentials registered to a system.",
                                "type": "EmptySystemResponse"
                            }
                        ],
                        "path": "/systems/v2/{systemId}/credentials"
                    },
                    {
                        "description": "List of internal user credentials on this system",
                        "has_websocket": false,
                        "operations": [
                            {
                                "is_websocket": false,
                                "method": "GET",
                                "nickname": "listCredentialsForInternalUser",
                                "notes": "Users must have ADMIN role or greater on a system to view its credentials. No sensitive information will be returned. This is strictly to keep track of which internal users have their own credentials.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of a internal user on this system.",
                                        "name": "internalUsername",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 250,
                                        "description": "The max number of results.",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "limit",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 0,
                                        "description": "The number of records to when returning the results. When paginating results, the page number = ceil(offset/limit)",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "offset",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    }
                                ],
                                "summary": "Get a list of all internal users and their credentials on this system.",
                                "type": "SystemCredentialsResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "POST",
                                "nickname": "updateCredentialsForInternalUser",
                                "notes": "Credentials will be valided when submitted. If the credentials are not valid, an error will be returned. The internalUsername value in the POST JSON must match the URI username value or an error message will be returned. Users must have ADMIN role or greater on a system to manage its credentials. No sensitive information will be returned. This is strictly to keep track of which internal users have their own credentials.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of a internal user on this system.",
                                        "name": "internalUsername",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"internalUsername\": null,\n\t\"username\": \"nryan\",\n\t\"password\": \"<password>\",\n\t\"credential\": null,\n\t\"type\": \"X509\",\n\t\"server\": {\n\t\t\"endpoint\": \"myproxy.teragrid.org\",\n\t\t\"port\": 7512,\n\t\t\"protocol\": \"MYPROXY\"\n\t},\n\t\"default\": true\n}",
                                        "description": "The description of the internal user credential to add or update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "UserCredential"
                                    }
                                ],
                                "summary": "Add or update a user's credentials on a system.",
                                "type": "EmptySystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "DELETE",
                                "nickname": "deleteCredentialsForInternalUser",
                                "notes": "This will delete all internal user credentials on this system. The internal users will remain unchanged and their individual credentials will fall back to the default system credential on all future interactions. Users must have ADMIN role or greater on a system to delete its roles. No sensitive information will be returned.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of a internal user on this system.",
                                        "name": "internalUsername",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ],
                                "summary": "Deletes all credentials registered to a system.",
                                "type": "EmptySystemResponse"
                            }
                        ],
                        "path": "/systems/v2/{systemId}/credentials/{internalUsername}"
                    },
                    {
                        "description": "List of internal user credentials on this system",
                        "has_websocket": false,
                        "operations": [
                            {
                                "is_websocket": false,
                                "method": "GET",
                                "nickname": "listCredentialsForInternalUserByType",
                                "notes": "If the internal user has no personal credential registered, the system default credential of the specified type will be returned. Users must have ADMIN role or greater on a system to view its credentials. No sensitive information will be returned. This is strictly to keep track of which internal users have their own credentials.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of a internal user on this system.",
                                        "name": "internalUsername",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The configuration type to which to apply this credential.",
                                        "enum": [
                                            "STORAGE",
                                            "LOGIN"
                                        ],
                                        "name": "credentialType",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 250,
                                        "description": "The max number of results.",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "limit",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": 0,
                                        "description": "The number of records to when returning the results. When paginating results, the page number = ceil(offset/limit)",
                                        "format": "int32",
                                        "min": 0,
                                        "name": "offset",
                                        "paramType": "query",
                                        "required": false,
                                        "type": "integer"
                                    }
                                ],
                                "summary": "Get the internal user credential of the given type on the system.",
                                "type": "SystemCredentialsResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "POST",
                                "nickname": "updateCredentialsForInternalUserByType",
                                "notes": "Credentials will be valided when submitted. If the credentials are not valid, an error will be returned. The internalUsername value in the POST JSON must match the URI username value or an error message will be returned. Users must have ADMIN role or greater on a system to manage its credentials. No sensitive information will be returned. This is strictly to keep track of which internal users have their own credentials.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of a internal user on this system.",
                                        "name": "internalUsername",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The configuration type to which to apply this credential.",
                                        "enum": [
                                            "STORAGE",
                                            "LOGIN"
                                        ],
                                        "name": "credentialType",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "defaultValue": "{\n\t\"internalUsername\": null,\n\t\"username\": \"nryan\",\n\t\"password\": \"<password>\",\n\t\"credential\": null,\n\t\"type\": \"X509\",\n\t\"server\": {\n\t\t\"endpoint\": \"myproxy.teragrid.org\",\n\t\t\"port\": 7512,\n\t\t\"protocol\": \"MYPROXY\"\n\t},\n\t\"default\": true\n}",
                                        "description": "The description of the internal user credential to add or update.",
                                        "name": "body",
                                        "paramType": "body",
                                        "required": true,
                                        "type": "UserCredential"
                                    }
                                ],
                                "summary": "Add or update a credential of the given type on a system.",
                                "type": "EmptySystemResponse"
                            },
                            {
                                "is_websocket": false,
                                "method": "DELETE",
                                "nickname": "deleteCredentialsForInternalUserByType",
                                "notes": "This will delete all internal user credentials for the specified type on this system. The internal users will remain unchanged and their individual credentials will fall back to the default system credential on all future interactions. Users must have ADMIN role or greater on a system to delete its roles. No sensitive information will be returned.",
                                "parameters": [
                                    {
                                        "allowMultiple": false,
                                        "description": "The id of the system.",
                                        "name": "systemId",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The username of a internal user on this system.",
                                        "name": "internalUsername",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "allowMultiple": false,
                                        "description": "The configuration type to which to apply this credential.",
                                        "enum": [
                                            "STORAGE",
                                            "LOGIN"
                                        ],
                                        "name": "credentialType",
                                        "paramType": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ],
                                "summary": "Deletes the internal user credentials for the given credential type on a system.",
                                "type": "EmptySystemResponse"
                            }
                        ],
                        "path": "/systems/v2/{systemId}/credentials/{internalUsername}/{credentialType}"
                    }
                ],
                "authorizations": [
                    "oauth2"
                ],
                "basePath": "https://api.tacc.cloud",
                "models": {
                    "BatchQueue": {
                        "id": "BatchQueue",
                        "name": "",
                        "properties": {
                            "customDirectives": {
                                "description": "Any custom directives that should be appended to scheduler directives. ex. #$ -A TG-12345",
                                "name": "customDirectives",
                                "type": "string"
                            },
                            "default": {
                                "description": "Is this the default queue for the system.",
                                "name": "default",
                                "required": true,
                                "type": "boolean"
                            },
                            "maxJobs": {
                                "description": "The maximum number of jobs that can be in queue at once.",
                                "format": "int32",
                                "name": "maxJobs",
                                "type": "integer"
                            },
                            "maxMemoryPerNode": {
                                "description": "The max memory available per node to jobs submitted to this queue.",
                                "name": "maxMemoryPerNode",
                                "type": "string"
                            },
                            "maxNodes": {
                                "description": "The max nodes available per node to jobs submitted to this queue.",
                                "name": "maxNodes",
                                "type": "string"
                            },
                            "maxProcessorsPerNode": {
                                "description": "The max processors per node available to jobs submitted to this queue.",
                                "format": "int32",
                                "name": "maxProcessorsPerNode",
                                "type": "integer"
                            },
                            "maxRequestedTime": {
                                "description": "The max length of jobs submitted to this queue in hhh:mm:ss format.",
                                "name": "maxRequestedTime",
                                "type": "string"
                            },
                            "maxUserJobs": {
                                "description": "The maximum number of jobs per user that can be in queue at once.",
                                "format": "int32",
                                "name": "maxUserJobs",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The name of the batch queue.",
                                "name": "name",
                                "required": true,
                                "type": "string"
                            }
                        }
                    },
                    "EmptySystemResponse": {
                        "id": "EmptySystemResponse",
                        "name": "",
                        "properties": {
                            "message": {
                                "description": "success or failure",
                                "name": "message",
                                "type": "string"
                            },
                            "result": {
                                "description": "empty result",
                                "name": "result",
                                "type": "string"
                            },
                            "status": {
                                "description": "success or failure",
                                "name": "status",
                                "type": "string"
                            }
                        }
                    },
                    "ExecutionSystem": {
                        "id": "ExecutionSystem",
                        "name": "",
                        "properties": {
                            "executionType": {
                                "description": "The execution paradigm used to run jobs on this system.",
                                "enum": [
                                    "HPC",
                                    "CONDOR",
                                    "CLI"
                                ],
                                "name": "executionType",
                                "required": true,
                                "type": "string"
                            },
                            "login": {
                                "description": "The login config defining how to connect to this system for job submission.",
                                "name": "login",
                                "required": true,
                                "type": "LoginConfig"
                            },
                            "maxSystemJobs": {
                                "description": "The maximum number of jobs that can be simultaneously run on the system across all queues.",
                                "format": "int32",
                                "name": "maxSystemJobs",
                                "type": "int"
                            },
                            "maxSystemJobsPerUser": {
                                "description": "The maximum number of jobs that can be simultaneously run on the system across all queues by a single user.",
                                "format": "int32",
                                "name": "maxSystemJobsPerUser",
                                "type": "int"
                            },
                            "queues": {
                                "description": "The execution paradigm used to run jobs on this system.",
                                "items": {
                                    "$ref": "BatchQueue"
                                },
                                "name": "queues",
                                "required": true,
                                "type": "array"
                            },
                            "scheduler": {
                                "description": "The type of scheduled used to run jobs.",
                                "enum": [
                                    "COBALT",
                                    "CONDOR",
                                    "FORK",
                                    "LOADLEVELER",
                                    "LSF",
                                    "MOAB",
                                    "PBS",
                                    "SGE",
                                    "SLURM",
                                    "TORQUE",
                                    "UNKNOWN"
                                ],
                                "name": "scheduler",
                                "required": true,
                                "type": "string"
                            },
                            "scratchDir": {
                                "description": "The scratch directory where job execution directories will be created at runtime. The workDir is used if this is not specified.",
                                "name": "scratchDir",
                                "type": "string"
                            },
                            "workDir": {
                                "description": "The work directory where job execution directories will be created at runtime. This is used if scratchDir is not specified. If neither are specified, the job directory will be created in the system homeDir.",
                                "name": "workDir",
                                "type": "string"
                            }
                        },
                        "required": [
                            "executionType",
                            "login",
                            "queues",
                            "scheduler"
                        ]
                    },
                    "LoginConfig": {
                        "id": "LoginConfig",
                        "name": "",
                        "properties": {
                            "auth": {
                                "description": "The default authentication credential used for this system.",
                                "name": "auth",
                                "required": true,
                                "type": "UserCredential"
                            },
                            "host": {
                                "description": "The hostname or ip address of the submission server",
                                "name": "host",
                                "required": true,
                                "type": "string"
                            },
                            "port": {
                                "description": "The port number of the submission server.",
                                "format": "int32",
                                "name": "port",
                                "required": true,
                                "type": "integer"
                            },
                            "protocol": {
                                "description": "The protocol used to authenticate to the submission server.",
                                "enum": [
                                    "GSISSH",
                                    "SSH",
                                    "LOCAL"
                                ],
                                "name": "protocol",
                                "required": true,
                                "type": "string"
                            }
                        }
                    },
                    "MultipleSystemResponse": {
                        "id": "MultipleSystemResponse",
                        "name": "",
                        "properties": {
                            "message": {
                                "description": "success or failure",
                                "name": "message",
                                "type": "string"
                            },
                            "result": {
                                "description": "response body",
                                "items": {
                                    "$ref": "SystemSummary"
                                },
                                "name": "result",
                                "type": "array"
                            },
                            "status": {
                                "description": "success or failure",
                                "name": "status",
                                "type": "string"
                            }
                        }
                    },
                    "MultipleSystemRoleResponse": {
                        "id": "MultipleSystemRoleResponse",
                        "name": "",
                        "properties": {
                            "message": {
                                "description": "success or failure",
                                "name": "message",
                                "type": "string"
                            },
                            "result": {
                                "description": "All matching roles for this system",
                                "items": {
                                    "$ref": "SystemRole"
                                },
                                "name": "result",
                                "type": "array"
                            },
                            "status": {
                                "description": "success or failure",
                                "name": "status",
                                "type": "string"
                            }
                        }
                    },
                    "SingleSystemResponse": {
                        "id": "SingleSystemResponse",
                        "name": "",
                        "properties": {
                            "message": {
                                "description": "success or failure",
                                "name": "message",
                                "type": "string"
                            },
                            "result": {
                                "name": "result",
                                "type": "System"
                            },
                            "status": {
                                "description": "success or failure",
                                "name": "status",
                                "type": "string"
                            }
                        }
                    },
                    "SingleSystemRoleResponse": {
                        "id": "SingleSystemRoleResponse",
                        "name": "",
                        "properties": {
                            "message": {
                                "description": "success or failure",
                                "name": "message",
                                "type": "string"
                            },
                            "result": {
                                "description": "The user's role for this system",
                                "name": "result",
                                "type": "SystemRole"
                            },
                            "status": {
                                "description": "success or failure",
                                "name": "status",
                                "type": "string"
                            }
                        }
                    },
                    "StorageConfig": {
                        "id": "StorageConfig",
                        "name": "",
                        "properties": {
                            "auth": {
                                "description": "The default authentication credential used for this system.",
                                "name": "auth",
                                "required": true,
                                "type": "UserCredential"
                            },
                            "homeDir": {
                                "description": "The path on the remote system to use as the home directory for all API requests. For cases where the home directory should be dynamically defined, the ${USERNAME} token can be included in the homeDir value to represent the username of the authenticated user. ex. /home/${USERNAME}.",
                                "name": "homeDir",
                                "type": "string"
                            },
                            "host": {
                                "description": "The hostname or ip address of the storage server",
                                "name": "host",
                                "required": true,
                                "type": "string"
                            },
                            "mirror": {
                                "description": "Whether the permissions set on the server should be pushed to the storage system itself. This only applies to IRODS and AWS systems.",
                                "name": "mirror",
                                "type": "boolean"
                            },
                            "port": {
                                "description": "The port number of the storage server.",
                                "format": "int32",
                                "name": "port",
                                "required": true,
                                "type": "integer"
                            },
                            "protocol": {
                                "description": "The protocol used to authenticate to the storage server.",
                                "enum": [
                                    "GRIDFTP",
                                    "FTP",
                                    "SFTP",
                                    "IRODS",
                                    "LOCAL"
                                ],
                                "name": "protocol",
                                "required": true,
                                "type": "string"
                            },
                            "publicAppsDir": {
                                "description": "The path on the remote system where apps will be stored if this is set as the default public storage system.",
                                "name": "publicAppsDir",
                                "type": "string"
                            },
                            "resource": {
                                "description": "The name of the target resource when defining an IRODS system.",
                                "name": "resource",
                                "type": "string"
                            },
                            "rootDir": {
                                "description": "The path on the remote system to use as the root for all API requests.",
                                "name": "rootDir",
                                "type": "string"
                            },
                            "zone": {
                                "description": "The name of the zone when defining an IRODS system.",
                                "name": "zone",
                                "type": "string"
                            }
                        }
                    },
                    "StorageSystem": {
                        "id": "StorageSystem",
                        "name": "",
                        "properties": {}
                    },
                    "StoredCredential": {
                        "id": "StoredCredential",
                        "name": "",
                        "properties": {
                            "credential": {
                                "description": "The credential used to authenticate to the remote system. Depending on the authentication protocol of the remote system, this could be an OAuth Token, X.509 certificate, Kerberose token, or an private key..",
                                "name": "credential",
                                "type": "string"
                            },
                            "default": {
                                "description": "Is this the default credential for this internal user of this type on this system?",
                                "name": "default",
                                "type": "boolean"
                            },
                            "expirationDate": {
                                "description": "The date the credential expires in ISO 8601 format.",
                                "format": "date-time",
                                "name": "expirationDate",
                                "type": "string"
                            },
                            "internalUsername": {
                                "description": "The username of the internal user associated with this credential.",
                                "name": "internalUsername",
                                "type": "string"
                            },
                            "parentType": {
                                "description": "The system type this credential is associated with.",
                                "enum": [
                                    "STORAGE",
                                    "EXECUTION"
                                ],
                                "name": "parentType",
                                "type": "string"
                            },
                            "password": {
                                "description": "The password on the remote system used to authenticate.",
                                "name": "password",
                                "type": "string"
                            },
                            "privateKey": {
                                "description": "The public ssh key used to authenticate to the remote system..",
                                "name": "privateKey",
                                "type": "string"
                            },
                            "publicKey": {
                                "description": "The public ssh key used to authenticate to the remote system.",
                                "name": "publicKey",
                                "type": "string"
                            },
                            "server": {
                                "description": "The server from which a credential may be obtained.",
                                "name": "server",
                                "type": "UserCredentialServer"
                            },
                            "type": {
                                "description": "The authentication type.",
                                "enum": [
                                    "LOCAL",
                                    "PAM",
                                    "PASSWORD",
                                    "SSHKEYS",
                                    "TOKEN",
                                    "X509"
                                ],
                                "name": "type",
                                "required": true,
                                "type": "string"
                            },
                            "username": {
                                "description": "The local username on the remote system used to authenticate.",
                                "name": "username",
                                "required": true,
                                "type": "string"
                            },
                            "valid": {
                                "description": "Is the credential still valid or has it expired?.",
                                "name": "valid",
                                "type": "boolean"
                            }
                        }
                    },
                    "System": {
                        "discriminator": "type",
                        "id": "System",
                        "name": "",
                        "properties": {
                            "default": {
                                "description": "Is the system the default for the authenticated user?",
                                "name": "default",
                                "type": "boolean"
                            },
                            "description": {
                                "description": "Verbose description of this system.",
                                "name": "description",
                                "type": "string"
                            },
                            "environment": {
                                "description": "Environment variables to set upon login prior to job submission.",
                                "name": "environment",
                                "type": "string"
                            },
                            "executionType": {
                                "description": "The execution paradigm used to run jobs on this system.",
                                "enum": [
                                    "HPC",
                                    "CONDOR",
                                    "CLI"
                                ],
                                "name": "executionType",
                                "type": "string"
                            },
                            "id": {
                                "description": "Unique identifier for this system.",
                                "name": "id",
                                "type": "string"
                            },
                            "lastModified": {
                                "description": "The date this system was last modified in ISO 8601 format.",
                                "format": "date-time",
                                "name": "lastModified",
                                "type": "string"
                            },
                            "login": {
                                "description": "The login config defining how to connect to this system for job submission.",
                                "name": "login",
                                "type": "LoginConfig"
                            },
                            "maxSystemJobs": {
                                "description": "The maximum number of jobs that can be simultaneously run on the system across all queues.",
                                "format": "int32",
                                "name": "maxSystemJobs",
                                "type": "int"
                            },
                            "maxSystemJobsPerUser": {
                                "description": "The maximum number of jobs that can be simultaneously run on the system across all queues by a single user.",
                                "format": "int32",
                                "name": "maxSystemJobsPerUser",
                                "type": "int"
                            },
                            "name": {
                                "description": "Common name for this system.",
                                "name": "name",
                                "type": "string"
                            },
                            "public": {
                                "description": "Is the system publicly available?",
                                "name": "public",
                                "type": "boolean"
                            },
                            "queues": {
                                "description": "The execution paradigm used to run jobs on this system.",
                                "items": {
                                    "$ref": "BatchQueue"
                                },
                                "name": "queues",
                                "type": "array"
                            },
                            "revision": {
                                "description": "The number of times this app has been updated.",
                                "name": "revision",
                                "type": "int"
                            },
                            "scheduler": {
                                "description": "The type of scheduled used to run jobs.",
                                "enum": [
                                    "COBALT",
                                    "CONDOR",
                                    "FORK",
                                    "LOADLEVELER",
                                    "LSF",
                                    "MOAB",
                                    "PBS",
                                    "SGE",
                                    "SLURM",
                                    "TORQUE",
                                    "UNKNOWN"
                                ],
                                "name": "scheduler",
                                "type": "string"
                            },
                            "scratchDir": {
                                "description": "The scratch directory where job execution directories will be created at runtime. The workDir is used if this is not specified.",
                                "name": "scratchDir",
                                "type": "string"
                            },
                            "site": {
                                "description": "The site associated with this system.",
                                "name": "site",
                                "type": "string"
                            },
                            "startupScript": {
                                "description": "Script to be run after login and prior to execution.",
                                "name": "startupScript",
                                "type": "string"
                            },
                            "status": {
                                "description": "The status of this system. Systems must be in UP status to be used.",
                                "enum": [
                                    "UP",
                                    "DOWN",
                                    "UNKNOWN"
                                ],
                                "name": "status",
                                "type": "string"
                            },
                            "storage": {
                                "description": "The storage config defining how to connect to this system for data staging.",
                                "name": "storage",
                                "type": "StorageConfig"
                            },
                            "type": {
                                "description": "The type of this system.",
                                "enum": [
                                    "EXECUTION",
                                    "STORAGE"
                                ],
                                "name": "type",
                                "type": "string"
                            },
                            "uuid": {
                                "description": "The uuid of this system.",
                                "name": "uuid",
                                "type": "string"
                            },
                            "workDir": {
                                "description": "The work directory where job execution directories will be created at runtime. This is used if scratchDir is not specified. If neither are specified, the job directory will be created in the system homeDir.",
                                "name": "workDir",
                                "type": "string"
                            }
                        },
                        "subTypes": [
                            "StorageSystem",
                            "ExecutionSystem"
                        ]
                    },
                    "SystemCredentialsResponse": {
                        "id": "SystemCredentialsResponse",
                        "name": "",
                        "properties": {
                            "message": {
                                "description": "success or failure",
                                "name": "message",
                                "type": "string"
                            },
                            "result": {
                                "name": "result",
                                "type": "StoredCredential"
                            },
                            "status": {
                                "description": "success or failure",
                                "name": "status",
                                "type": "string"
                            }
                        }
                    },
                    "SystemOperationRequest": {
                        "id": "SystemOperationRequest",
                        "name": "",
                        "properties": {
                            "action": {
                                "description": "Action to perform on the system.",
                                "enum": [
                                    "ENABLE",
                                    "DISABLE",
                                    "PUBLISH",
                                    "UNPUBLISH",
                                    "SETDEFAULT",
                                    "UNSETDEFAULT",
                                    "SETGLOBALDEFAULT",
                                    "UNSETGLOBALDEFAULT",
                                    "CLONE"
                                ],
                                "name": "action",
                                "required": true,
                                "type": "string"
                            },
                            "id": {
                                "description": "The new system id of the cloned system",
                                "name": "id",
                                "type": "string"
                            }
                        }
                    },
                    "SystemRequest": {
                        "discriminator": "type",
                        "id": "SystemRequest",
                        "name": "",
                        "properties": {
                            "description": {
                                "description": "Verbose description of this system.",
                                "name": "description",
                                "type": "string"
                            },
                            "environment": {
                                "description": "Environment variables to set upon login prior to job submission.",
                                "name": "environment",
                                "type": "string"
                            },
                            "executionType": {
                                "description": "The execution paradigm used to run jobs on this system.",
                                "enum": [
                                    "HPC",
                                    "CONDOR",
                                    "CLI"
                                ],
                                "name": "executionType",
                                "required": true,
                                "type": "string"
                            },
                            "id": {
                                "description": "Unique identifier for this system.",
                                "name": "id",
                                "type": "string"
                            },
                            "login": {
                                "description": "The login config defining how to connect to this system for job submission.",
                                "name": "login",
                                "required": true,
                                "type": "LoginConfig"
                            },
                            "maxSystemJobs": {
                                "description": "The maximum number of jobs that can be simultaneously run on the system across all queues.",
                                "format": "int32",
                                "name": "maxSystemJobs",
                                "type": "int"
                            },
                            "maxSystemJobsPerUser": {
                                "description": "The maximum number of jobs that can be simultaneously run on the system across all queues by a single user.",
                                "format": "int32",
                                "name": "maxSystemJobsPerUser",
                                "type": "int"
                            },
                            "name": {
                                "description": "Common name for this system.",
                                "name": "name",
                                "required": true,
                                "type": "string"
                            },
                            "queues": {
                                "description": "The execution paradigm used to run jobs on this system.",
                                "items": {
                                    "$ref": "BatchQueue"
                                },
                                "name": "queues",
                                "required": true,
                                "type": "array"
                            },
                            "scheduler": {
                                "description": "The type of scheduled used to run jobs.",
                                "enum": [
                                    "COBALT",
                                    "CONDOR",
                                    "FORK",
                                    "LOADLEVELER",
                                    "LSF",
                                    "MOAB",
                                    "PBS",
                                    "SGE",
                                    "SLURM",
                                    "TORQUE",
                                    "UNKNOWN"
                                ],
                                "name": "scheduler",
                                "required": true,
                                "type": "string"
                            },
                            "scratchDir": {
                                "description": "The scratch directory where job execution directories will be created at runtime. The workDir is used if this is not specified.",
                                "name": "scratchDir",
                                "type": "string"
                            },
                            "site": {
                                "description": "The site associated with this system.",
                                "name": "site",
                                "type": "string"
                            },
                            "startupScript": {
                                "description": "Script to be run after login and prior to execution.",
                                "name": "startupScript",
                                "type": "string"
                            },
                            "status": {
                                "description": "The status of this system. Systems must be in UP status to be used.",
                                "enum": [
                                    "UP",
                                    "DOWN",
                                    "UNKNOWN"
                                ],
                                "name": "status",
                                "required": true,
                                "type": "string"
                            },
                            "storage": {
                                "description": "The storage config defining how to connect to this system for data staging.",
                                "name": "storage",
                                "required": true,
                                "type": "StorageConfig"
                            },
                            "type": {
                                "description": "The type of this system.",
                                "enum": [
                                    "EXECUTION",
                                    "STORAGE"
                                ],
                                "name": "type",
                                "required": true,
                                "type": "string"
                            },
                            "workDir": {
                                "description": "The work directory where job execution directories will be created at runtime. This is used if scratchDir is not specified. If neither are specified, the job directory will be created in the system homeDir.",
                                "name": "workDir",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "storage",
                            "name",
                            "status",
                            "type"
                        ],
                        "subTypes": [
                            "StorageSystem",
                            "ExecutionSystem"
                        ]
                    },
                    "SystemRole": {
                        "id": "SystemRole",
                        "name": "",
                        "properties": {
                            "role": {
                                "description": "The role granted this user.",
                                "enum": [
                                    "USER",
                                    "PUBLISHER",
                                    "ADMIN",
                                    "OWNER"
                                ],
                                "name": "role",
                                "type": "string"
                            },
                            "username": {
                                "description": "The username of the api user granted this role.",
                                "name": "username",
                                "type": "string"
                            }
                        }
                    },
                    "SystemSummary": {
                        "id": "SystemSummary",
                        "name": "",
                        "properties": {
                            "default": {
                                "description": "Is the system the default for the authenticated user?",
                                "name": "default",
                                "type": "boolean"
                            },
                            "description": {
                                "description": "Verbose description of this system.",
                                "name": "description",
                                "type": "string"
                            },
                            "id": {
                                "description": "Unique identifier for this system.",
                                "name": "id",
                                "type": "string"
                            },
                            "name": {
                                "description": "Common name for this system.",
                                "name": "name",
                                "type": "string"
                            },
                            "public": {
                                "description": "Is the system publicly available?",
                                "name": "public",
                                "type": "boolean"
                            },
                            "status": {
                                "description": "The status of this system. Systems must be in UP status to be used.",
                                "enum": [
                                    "UP",
                                    "DOWN",
                                    "UNKNOWN"
                                ],
                                "name": "status",
                                "type": "string"
                            },
                            "type": {
                                "description": "The type of this system.",
                                "enum": [
                                    "EXECUTION",
                                    "STORAGE"
                                ],
                                "name": "type",
                                "type": "string"
                            }
                        }
                    },
                    "UserCredential": {
                        "id": "UserCredential",
                        "name": "",
                        "properties": {
                            "credential": {
                                "description": "The credential used to authenticate to the remote system. Depending on the authentication protocol of the remote system, this could be an OAuth Token, X.509 certificate, Kerberose token, or an private key..",
                                "name": "credential",
                                "type": "string"
                            },
                            "internalUsername": {
                                "description": "The username of the internal user associated with this credential.",
                                "name": "internalUsername",
                                "type": "string"
                            },
                            "password": {
                                "description": "The password on the remote system used to authenticate.",
                                "name": "password",
                                "type": "string"
                            },
                            "privateKey": {
                                "description": "The public ssh key used to authenticate to the remote system..",
                                "name": "privateKey",
                                "type": "string"
                            },
                            "publicKey": {
                                "description": "The public ssh key used to authenticate to the remote system.",
                                "name": "publicKey",
                                "type": "string"
                            },
                            "server": {
                                "description": "The server from which a credential may be obtained.",
                                "name": "server",
                                "type": "UserCredentialServer"
                            },
                            "type": {
                                "description": "The authentication type.",
                                "enum": [
                                    "LOCAL",
                                    "PAM",
                                    "PASSWORD",
                                    "SSHKEYS",
                                    "TOKEN",
                                    "X509"
                                ],
                                "name": "type",
                                "required": true,
                                "type": "string"
                            },
                            "username": {
                                "description": "The local username on the remote system used to authenticate.",
                                "name": "username",
                                "type": "string"
                            }
                        }
                    },
                    "UserCredentialServer": {
                        "id": "UserCredentialServer",
                        "name": "",
                        "properties": {
                            "endpoint": {
                                "description": "The hostname or ip address of the remote server.",
                                "name": "endpoint",
                                "required": true,
                                "type": "string"
                            },
                            "port": {
                                "description": "The port number of the remote server..",
                                "format": "int32",
                                "name": "port",
                                "required": true,
                                "type": "int"
                            },
                            "protocol": {
                                "description": "The protocol used to obtain a credential from the remote server.",
                                "enum": [
                                    "MYPROXY",
                                    "OA4MP"
                                ],
                                "name": "protocol",
                                "required": true,
                                "type": "string"
                            }
                        }
                    }
                },
                "resourcePath": "/systems/v2",
                "swaggerVersion": "1.2"
            },
            "description": "Register and manage systems",
            "name": "systems",
            "path": "/systems",
            "url": "http://localhost:9999/systems"
        }
    ]
}